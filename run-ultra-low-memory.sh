#!/bin/bash
set -e

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

VENV_PATH="/tmp/claude-bot-simple"
# Get the directory where this script is located (project root)
PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

echo -e "${GREEN}üî• –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∑ –µ–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ—é –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—î—é –ø–∞–º'—è—Ç—ñ${NC}"
echo -e "${YELLOW}üìÇ –†–æ–±–æ—á–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è: $PROJECT_DIR${NC}"

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ –ø—Ä–æ—Ü–µ—Å—ñ–≤
cleanup_duplicates() {
    echo -e "${BLUE}üßπ –û—á–∏—â–µ–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ –ø—Ä–æ—Ü–µ—Å—ñ–≤...${NC}"

    # –ó–Ω–∞–π—Ç–∏ –≤—Å—ñ –ø—Ä–æ—Ü–µ—Å–∏ –±–æ—Ç–∞ —Ç–∞ –∑–∞–ª–∏—à–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –æ–¥–∏–Ω
    PIDS=$(pgrep -f "python -m src.main" 2>/dev/null || true)
    if [ -n "$PIDS" ]; then
        echo "–ó–Ω–∞–π–¥–µ–Ω—ñ –ø—Ä–æ—Ü–µ—Å–∏ –±–æ—Ç–∞: $PIDS"
        # –í–±–∏—Ç–∏ –≤—Å—ñ –ø—Ä–æ—Ü–µ—Å–∏
        for pid in $PIDS; do
            echo "–ó—É–ø–∏–Ω—è—î–º–æ –ø—Ä–æ—Ü–µ—Å: $pid"
            kill -TERM "$pid" 2>/dev/null || true
        done
        sleep 2
        # –ü—Ä–∏–º—É—Å–æ–≤–æ –≤–±–∏—Ç–∏ —è–∫—â–æ —â–µ –∂–∏–≤—ñ
        for pid in $PIDS; do
            if kill -0 "$pid" 2>/dev/null; then
                echo "–ü—Ä–∏–º—É—Å–æ–≤–æ –∑—É–ø–∏–Ω—è—î–º–æ –ø—Ä–æ—Ü–µ—Å: $pid"
                kill -KILL "$pid" 2>/dev/null || true
            fi
        done
    fi

    # –û—á–∏—Å—Ç–∏—Ç–∏ –∑–æ–º–±—ñ –ø—Ä–æ—Ü–µ—Å–∏
    ps aux | grep '[Zz]ombie' | awk '{print $2}' | xargs -r kill -9 2>/dev/null || true

    echo -e "${GREEN}‚úÖ –î—É–±–ª—ñ–∫–∞—Ç–∏ –æ—á–∏—â–µ–Ω—ñ${NC}"
}

# –û—á–∏—Å—Ç–∏—Ç–∏ –¥—É–±–ª—ñ–∫–∞—Ç–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
cleanup_duplicates

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∞–≥—Ä–µ—Å–∏–≤–Ω–æ–≥–æ –æ—á–∏—â–µ–Ω–Ω—è –ø–∞–º'—è—Ç—ñ —Ç–∞ –∫–µ—à—É
memory_cleanup() {
    echo -e "${YELLOW}üßπ –ê–≥—Ä–µ—Å–∏–≤–Ω–µ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è –ø–∞–º'—è—Ç—ñ —Ç–∞ –∫–µ—à—É...${NC}"

    # –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è —Ñ–∞–π–ª–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏
    sync

    # –û—á–∏—â–µ–Ω–Ω—è Python –∫–µ—à—É
    echo -e "${BLUE}üì¶ –û—á–∏—â–µ–Ω–Ω—è Python –∫–µ—à—É...${NC}"
    find "$PROJECT_DIR" -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
    find "$PROJECT_DIR" -type f -name "*.pyc" -delete 2>/dev/null || true
    find "$PROJECT_DIR" -type f -name "*.pyo" -delete 2>/dev/null || true

    # –û—á–∏—â–µ–Ω–Ω—è tmp —Ñ–∞–π–ª—ñ–≤
    echo -e "${BLUE}üóëÔ∏è –û—á–∏—â–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤...${NC}"
    rm -rf /tmp/claude* 2>/dev/null || true
    rm -rf /tmp/python* 2>/dev/null || true
    rm -rf "$PROJECT_DIR"/.pytest_cache 2>/dev/null || true
    rm -rf "$PROJECT_DIR"/data/telegram_persistence.pickle.* 2>/dev/null || true

    # –û—á–∏—â–µ–Ω–Ω—è –ª–æ–≥—ñ–≤ (–∑–∞–ª–∏—à–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ)
    find "$PROJECT_DIR" -name "*.log" -mtime +1 -delete 2>/dev/null || true
    find "$PROJECT_DIR" -name "*.log.*" -delete 2>/dev/null || true

    # –°–∏—Å—Ç–µ–º–Ω—ñ –∫–µ—à—ñ
    echo -e "${BLUE}üíæ –û—á–∏—â–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –∫–µ—à—ñ–≤...${NC}"
    sudo sysctl -w vm.drop_caches=3 >/dev/null 2>&1 || true
    sudo sysctl -w vm.swappiness=1 >/dev/null 2>&1 || true
    sudo sysctl -w vm.vfs_cache_pressure=500 >/dev/null 2>&1 || true

    # –û—á–∏—â–µ–Ω–Ω—è –ø–∞–º'—è—Ç—ñ Node.js/npm –∫–µ—à—É
    npm cache clean --force 2>/dev/null || true

    echo -e "${GREEN}‚úÖ –û—á–∏—â–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–µ${NC}"
}

# –í–∏–∫–æ–Ω–∞—Ç–∏ –æ—á–∏—â–µ–Ω–Ω—è –ø–∞–º'—è—Ç—ñ
memory_cleanup

# –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Ç–∞ –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ venv (—è–∫—â–æ —ñ—Å–Ω—É—î)
if [ -f "$VENV_PATH/bin/activate" ]; then
    echo -e "${BLUE}üêç –ê–∫—Ç–∏–≤–∞—Ü—ñ—è virtual environment...${NC}"
    source "$VENV_PATH/bin/activate"
else
    echo -e "${YELLOW}‚ö†Ô∏è Virtual environment –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å–∏—Å—Ç–µ–º–Ω–∏–π Python${NC}"
    # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —î poetry
    if command -v poetry >/dev/null 2>&1; then
        echo -e "${BLUE}üì¶ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Poetry environment...${NC}"
        export PYTHON_BIN="poetry run python"
    else
        echo -e "${BLUE}üêç –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å–∏—Å—Ç–µ–º–Ω–∏–π Python...${NC}"
        export PYTHON_BIN="python"
    fi
fi

# –ú'—è–∫—ñ –æ–±–º–µ–∂–µ–Ω–Ω—è –ø–∞–º'—è—Ç—ñ (–±–µ–∑ ulimit - –¥–æ–∑–≤–æ–ª—è—î–º–æ Node.js –∑–∞–ø—É—Å—Ç–∏—Ç–∏—Å—å)
# ulimit –±–ª–æ–∫—É—î Claude CLI –Ω–∞–≤—ñ—Ç—å –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏
# –ü–æ–∫–ª–∞–¥–∞—î–º–æ—Å—è —Ç—ñ–ª—å–∫–∏ –Ω–∞ NODE_OPTIONS –¥–ª—è –æ–±–º–µ–∂–µ–Ω–Ω—è –ø–∞–º'—è—Ç—ñ

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
setup_environment() {
    echo -e "${BLUE}‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –¥–ª—è –µ–∫–æ–Ω–æ–º—ñ—ó –ø–∞–º'—è—Ç—ñ...${NC}"

    # Python –º—ñ–∫—Ä–æ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
    export PYTHONDONTWRITEBYTECODE=1
    export PYTHONUNBUFFERED=1
    export PYTHONOPTIMIZE=2
    export PYTHONHASHSEED=0
    export MALLOC_TRIM_THRESHOLD_=10000
    export PYTHONMALLOC=malloc

    # –û–±–º–µ–∂–µ–Ω–Ω—è –Ω–∞ SQLite
    export SQLITE_MAX_MEMORY=32768  # 32MB max

    # Node.js –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è Claude CLI (–∑–±—ñ–ª—å—à—É—î–º–æ –ø–∞–º'—è—Ç—å)
    export NODE_OPTIONS="--max-old-space-size=256 --max-semi-space-size=4"
    export V8_HEAP_SPACE_STATS=0
    export UV_THREADPOOL_SIZE=1
    export NODE_ENV=production

    # –û–±–º–µ–∂–µ–Ω–Ω—è Telegram bot
    export TELEGRAM_MAX_CONNECTIONS=1

    echo -e "${GREEN}‚úÖ –°–µ—Ä–µ–¥–æ–≤–∏—â–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ${NC}"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–∞–º'—è—Ç—ñ
show_memory_stats() {
    echo -e "${YELLOW}üìä –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –ø–∞–º'—è—Ç—ñ:${NC}"
    echo -e "${BLUE}üíæ –°–∏—Å—Ç–µ–º–Ω–∞ –ø–∞–º'—è—Ç—å:${NC}"
    free -h | head -2

    echo -e "${BLUE}üîÑ Swap –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:${NC}"
    swapon --show=NAME,SIZE,USED,PRIO,TYPE 2>/dev/null || echo "Swap –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π"

    echo -e "${BLUE}üìÅ –†–æ–∑–º—ñ—Ä –ø—Ä–æ–µ–∫—Ç—É:${NC}"
    du -sh "$PROJECT_DIR" 2>/dev/null || echo "–ù–µ–º–æ–∂–ª–∏–≤–æ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ —Ä–æ–∑–º—ñ—Ä"

    echo -e "${BLUE}üèÉ‚Äç‚ôÇÔ∏è –ê–∫—Ç–∏–≤–Ω—ñ Python –ø—Ä–æ—Ü–µ—Å–∏:${NC}"
    ps aux | grep python | grep -v grep | wc -l || echo "0"
}

# –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
setup_environment

echo -e "${YELLOW}üìä –°—Ç–∞–Ω —Å–∏—Å—Ç–µ–º–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º:${NC}"
show_memory_stats

cd "$PROJECT_DIR"

echo -e "${GREEN}‚úÖ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∑ –µ–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∏–º–∏ –æ–±–º–µ–∂–µ–Ω–Ω—è–º–∏...${NC}"

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É
monitor_and_run() {
    local restart_count=0
    local max_restarts=3

    while [ $restart_count -lt $max_restarts ]; do
        echo -e "${GREEN}‚úÖ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (—Å–ø—Ä–æ–±–∞ $((restart_count + 1))/$max_restarts)...${NC}"

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–∞–º'—è—Ç—ñ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
        available_mem=$(free -m | awk 'NR==2{printf "%.0f", $7}')
        if [ "$available_mem" -lt 100 ]; then
            echo -e "${YELLOW}‚ö†Ô∏è –ú–∞–ª–æ –¥–æ—Å—Ç—É–ø–Ω–æ—ó –ø–∞–º'—è—Ç—ñ: ${available_mem}MB${NC}"
            memory_cleanup
        fi

        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∑ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥–æ–º
        ${PYTHON_BIN:-python} -m src.main --debug "$@" &
        BOT_PID=$!

        # –ß–µ–∫–∞—Ç–∏ –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å—É
        wait $BOT_PID
        exit_code=$?

        echo -e "${RED}‚ùå –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–≤—Å—è –∑ –∫–æ–¥–æ–º: $exit_code${NC}"

        # –ê–Ω–∞–ª—ñ–∑ –ø—Ä–∏—á–∏–Ω–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
        if [ $exit_code -eq 137 ]; then
            echo -e "${RED}üî• –ü—Ä–æ—Ü–µ—Å –≤–±–∏—Ç–æ —á–µ—Ä–µ–∑ –Ω–µ—Å—Ç–∞—á—É –ø–∞–º'—è—Ç—ñ (OOM Killer)${NC}"
        elif [ $exit_code -eq 1 ]; then
            echo -e "${YELLOW}‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∞–±–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π${NC}"
        fi

        # –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞–Ω –ø–∞–º'—è—Ç—ñ –ø—ñ—Å–ª—è –∫—Ä–∞—Ö—É
        echo -e "${BLUE}üìä –°—Ç–∞–Ω —Å–∏—Å—Ç–µ–º–∏ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è:${NC}"
        show_memory_stats

        restart_count=$((restart_count + 1))

        if [ $restart_count -lt $max_restarts ]; then
            echo -e "${YELLOW}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...${NC}"
            sleep 5

            # –û—á–∏—â–µ–Ω–Ω—è –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º
            cleanup_duplicates
            memory_cleanup
        fi
    done

    echo -e "${RED}‚ùå –î–æ—Å—è–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—ñ–≤ ($max_restarts)${NC}"
    echo -e "${YELLOW}üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:${NC}"
    echo "  - –ó–±—ñ–ª—å—à—Ç–µ swap —Ñ–∞–π–ª"
    echo "  - –ó–∞–∫—Ä–∏–π—Ç–µ —ñ–Ω—à—ñ –ø—Ä–æ–≥—Ä–∞–º–∏"
    echo "  - –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–∞–º'—è—Ç—ñ"
    exit 1
}

# –ó–∞–ø—É—Å–∫ –∑ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥–æ–º
monitor_and_run "$@"