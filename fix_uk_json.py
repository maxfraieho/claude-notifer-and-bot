#!/usr/bin/env python3
"""Fix Ukrainian JSON localization file by adding missing start section."""

import json
from pathlib import Path

def fix_uk_json():
    """Fix the Ukrainian JSON file by adding missing commands."""
    
    # File paths
    uk_file = Path("/home/vokov/claude-notifer-and-bot/src/localization/translations/uk.json")
    en_file = Path("/home/vokov/claude-notifer-and-bot/src/localization/translations/en.json")
    
    # Load English file to get structure
    with open(en_file, 'r', encoding='utf-8') as f:
        en_data = json.load(f)
    
    # Load Ukrainian file (currently broken with duplicate commands)
    with open(uk_file, 'r', encoding='utf-8') as f:
        uk_data = json.load(f)
    
    print("Current UK commands keys:", list(uk_data.get('commands', {}).keys()))
    print("EN commands keys:", list(en_data.get('commands', {}).keys()))
    
    # Get the start section from English as template
    en_start = en_data.get('commands', {}).get('start', {})
    en_help = en_data.get('commands', {}).get('help', {})
    
    print("EN start keys:", list(en_start.keys()))
    print("EN help keys:", list(en_help.keys()))
    
    # The Ukrainian translations for start section
    uk_start = {
        "welcome": "üëã –í—ñ—Ç–∞—é —É Claude Code Telegram –±–æ—Ç—ñ, {name}!",
        "description": "ü§ñ –Ø –¥–æ–ø–æ–º–∞–≥–∞—é –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–¥–∞–ª–µ–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–æ Claude Code —á–µ—Ä–µ–∑ Telegram.",
        "available_commands": "**–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:**",
        "help_cmd": "–ü–æ–∫–∞–∑–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—É –¥–æ–≤—ñ–¥–∫—É",
        "new_cmd": "–ü–æ—á–∞—Ç–∏ –Ω–æ–≤—É —Å–µ—Å—ñ—é –∑ Claude",
        "ls_cmd": "–ü–æ–∫–∞–∑–∞—Ç–∏ —Ñ–∞–π–ª–∏ –≤ –ø–æ—Ç–æ—á–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó",
        "cd_cmd": "–ó–º—ñ–Ω–∏—Ç–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é",
        "projects_cmd": "–ü–æ–∫–∞–∑–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—Ä–æ–µ–∫—Ç–∏",
        "status_cmd": "–ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å —Å–µ—Å—ñ—ó",
        "actions_cmd": "–ü–æ–∫–∞–∑–∞—Ç–∏ —à–≤–∏–¥–∫—ñ –¥—ñ—ó",
        "git_cmd": "–ö–æ–º–∞–Ω–¥–∏ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é",
        "quick_start": "**–®–≤–∏–¥–∫–∏–π —Å—Ç–∞—Ä—Ç:**",
        "quick_start_1": "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ `/projects` —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—Ä–æ–µ–∫—Ç–∏",
        "quick_start_2": "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ `/cd <–ø—Ä–æ–µ–∫—Ç>` —â–æ–± –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –ø—Ä–æ–µ–∫—Ç—É",
        "quick_start_3": "–ù–∞–¥—ñ—à–ª—ñ—Ç—å –±—É–¥—å-—è–∫–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —â–æ–± –ø–æ—á–∞—Ç–∏ –∫–æ–¥–∏—Ç–∏ –∑ Claude!",
        "security_note": "üîí –í–∞—à –¥–æ—Å—Ç—É–ø –∑–∞—Ö–∏—â–µ–Ω–∏–π —ñ –≤—Å—ñ –¥—ñ—ó –ª–æ–≥—É—é—Ç—å—Å—è.",
        "usage_note": "üìä –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ `/status` —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ª—ñ–º—ñ—Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è."
    }
    
    # Ukrainian translations for help section  
    uk_help = {
        "title": "ü§ñ **–î–æ–≤—ñ–¥–∫–∞ Claude Code Telegram Bot**",
        "navigation_title": "**–ö–æ–º–∞–Ω–¥–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó:**",
        "ls_desc": "–ü–æ–∫–∞–∑–∞—Ç–∏ —Ñ–∞–π–ª–∏ —ñ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó", 
        "cd_desc": "–ó–º—ñ–Ω–∏—Ç–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é",
        "pwd_desc": "–ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é",
        "projects_desc": "–ü–æ–∫–∞–∑–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –ø—Ä–æ–µ–∫—Ç–∏",
        "session_title": "**–ö–æ–º–∞–Ω–¥–∏ —Å–µ—Å—ñ—ó:**",
        "new_desc": "–ü–æ—á–∞—Ç–∏ –Ω–æ–≤—É —Å–µ—Å—ñ—é Claude",
        "continue_desc": "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—é —Å–µ—Å—ñ—é (–∑ –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º)",
        "end_desc": "–ó–∞–≤–µ—Ä—à–∏—Ç–∏ –ø–æ—Ç–æ—á–Ω—É —Å–µ—Å—ñ—é",
        "status_desc": "–ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å —Å–µ—Å—ñ—ó —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è",
        "export_desc": "–ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é —Å–µ—Å—ñ—ó",
        "actions_desc": "–ü–æ–∫–∞–∑–∞—Ç–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ñ —à–≤–∏–¥–∫—ñ –¥—ñ—ó",
        "git_desc": "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π",
        "usage_title": "**–ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:**",
        "usage_cd": "–£–≤—ñ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –ø—Ä–æ–µ–∫—Ç—É",
        "usage_ls": "–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è —â–æ —î –≤ –ø–æ—Ç–æ—á–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó", 
        "usage_code": "–ü–æ–ø—Ä–æ—Å–∏—Ç–∏ Claude –Ω–∞–ø–∏—Å–∞—Ç–∏ –∫–æ–¥",
        "usage_file": "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ñ–∞–π–ª –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É Claude",
        "file_ops_title": "**–û–ø–µ—Ä–∞—Ü—ñ—ó –∑ —Ñ–∞–π–ª–∞–º–∏:**",
        "file_ops_send": "–ù–∞–¥—Å–∏–ª–∞–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ñ —Ñ–∞–π–ª–∏ (.py, .js, .md, —Ç–æ—â–æ) –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É",
        "file_ops_modify": "Claude –º–æ–∂–µ —á–∏—Ç–∞—Ç–∏, –∑–º—ñ–Ω—é–≤–∞—Ç–∏ —Ç–∞ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —Ñ–∞–π–ª–∏",
        "file_ops_security": "–í—Å—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ —Ñ–∞–π–ª–∞–º–∏ –≤ –º–µ–∂–∞—Ö –¥–æ–∑–≤–æ–ª–µ–Ω–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó",
        "security_title": "**–§—É–Ω–∫—Ü—ñ—ó –±–µ–∑–ø–µ–∫–∏:**",
        "security_path": "üîí –ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ –æ–±—Ö–æ–¥—É —à–ª—è—Ö—ñ–≤",
        "security_rate": "‚è±Ô∏è –û–±–º–µ–∂–µ–Ω–Ω—è —à–≤–∏–¥–∫–æ—Å—Ç—ñ –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –∑–ª–æ–≤–∂–∏–≤–∞–Ω–Ω—è–º",
        "security_usage": "üìä –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ç–∞ –ª—ñ–º—ñ—Ç–∏",
        "security_validation": "üõ°Ô∏è –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–∞ —Å–∞–Ω—ñ—Ç–∞—Ä–∏–∑–∞—Ü—ñ—è –≤–≤–æ–¥—É",
        "tips_title": "**–ü–æ—Ä–∞–¥–∏:**",
        "tips_specific": "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ, –∑—Ä–æ–∑—É–º—ñ–ª—ñ –∑–∞–ø–∏—Ç–∏ –¥–ª—è –∫—Ä–∞—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤",
        "tips_status": "–ü–µ—Ä–µ–≤—ñ—Ä—è–π—Ç–µ `/status` —â–æ–± –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ –≤–∞—à–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è",
        "tips_buttons": "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ —à–≤–∏–¥–∫–∏—Ö –¥—ñ–π –∫–æ–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ"
    }
    
    # Add missing sections to the current commands
    if 'commands' not in uk_data:
        uk_data['commands'] = {}
    
    # Add the missing start and help sections
    uk_data['commands']['start'] = uk_start
    uk_data['commands']['help'] = uk_help
    
    # Also check if we have buttons section
    if 'buttons' not in uk_data:
        uk_data['buttons'] = {}
        
    # Add missing button translations if they don't exist
    button_translations = {
        "show_projects": "üìÅ –ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∏",
        "get_help": "‚ùì –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ–ø–æ–º–æ–≥—É", 
        "new_session": "üÜï –ù–æ–≤–∞ —Å–µ—Å—ñ—è",
        "check_status": "üìä –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å",
        "language_settings": "üåê –ú–æ–≤–∞"
    }
    
    for key, value in button_translations.items():
        if key not in uk_data['buttons']:
            uk_data['buttons'][key] = value
    
    print("After fix - commands keys:", list(uk_data.get('commands', {}).keys()))
    
    # Save the fixed file
    with open(uk_file, 'w', encoding='utf-8') as f:
        json.dump(uk_data, f, indent=2, ensure_ascii=False)
    
    print(f"Fixed Ukrainian JSON file: {uk_file}")
    
    # Verify the fix
    with open(uk_file, 'r', encoding='utf-8') as f:
        fixed_data = json.load(f)
    
    print("Verification - commands keys:", list(fixed_data.get('commands', {}).keys()))
    print("Start section exists:", 'start' in fixed_data.get('commands', {}))
    if 'start' in fixed_data.get('commands', {}):
        print("Start welcome text:", fixed_data['commands']['start'].get('welcome', 'NOT FOUND'))

if __name__ == "__main__":
    fix_uk_json()