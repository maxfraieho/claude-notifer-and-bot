# Production Docker Compose for Claude Telegram Bot
# Deployment template for new servers

version: '3.8'

services:
  claude_bot:
    # Use the stable working image from Docker Hub
    image: kroschu/claude-code-telegram:v0.1.2-working
    container_name: claude-code-bot-prod
    restart: unless-stopped
    
    # Environment configuration
    env_file:
      - .env
    
    # Additional environment overrides for production
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - TZ=Europe/Kiev
    
    # Volume mounts for data persistence and Claude CLI integration
    volumes:
      # Application data persistence (SQLite database, logs, cache)
      - ./data:/app/data
      # Target project directory for Claude operations
      - ./target_project:/app/target_project
      # Claude CLI authentication - CRITICAL: must contain your Claude auth
      - ./claude-config:/home/claudebot/.claude
      # Optional: Additional workspace if needed
      # - ./workspace:/app/workspace
    
    # Working directory
    working_dir: /app
    
    # Security: Run as root to avoid permission issues with Claude CLI
    # Note: This is required for proper Claude CLI integration
    
    # Comprehensive health check
    healthcheck:
      test: |
        python -c "
        try:
            import src.main
            from src.config.settings import Settings
            settings = Settings()
            print('✓ Bot configuration valid')
            exit(0)
        except Exception as e:
            print(f'✗ Health check failed: {e}')
            exit(1)
        "
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 45s
    
    # Production logging with rotation
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        labels: "service=claude-bot,environment=production"
    
    # Resource limits optimized for VPS deployment
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '1.5'
        reservations:
          memory: 768M
          cpus: '0.5'
    
    # Container labels for management
    labels:
      - "com.docker.compose.service=claude-bot"
      - "environment=production"
      - "version=v0.1.2-working"
      - "app=claude-code-telegram"

# Network configuration
networks:
  default:
    driver: bridge