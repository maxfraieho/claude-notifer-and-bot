#!/usr/bin/env python3

"""
–ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—ó –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É
"""

import asyncio
from localization.i18n import i18n

def test_translation_keys():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—é—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—ñ –∫–ª—é—á—ñ –≤ –ø–µ—Ä–µ–∫–ª–∞–¥–∏"""

    print("üß™ –¢–µ—Å—Ç—É—î–º–æ –∫–ª—é—á—ñ –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—ó...")

    # –ö–ª—é—á—ñ —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –≤ restart –∫–æ–¥—ñ
    test_keys = [
        "commands.start.welcome",
        "commands.restart.completed",
        "buttons.new_session",
        "buttons.continue_session",
        "buttons.check_status",
        "buttons.context",
        "buttons.settings",
        "buttons.get_help",
        "buttons.language_settings"
    ]

    results = {}
    for key in test_keys:
        try:
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –ø–µ—Ä–µ–∫–ª–∞–¥
            uk_text = i18n.get(key, locale="uk")
            en_text = i18n.get(key, locale="en")

            # –Ø–∫—â–æ –ø–µ—Ä–µ–∫–ª–∞–¥ –º—ñ—Å—Ç–∏—Ç—å —Å–∞–º –∫–ª—é—á - —Ü–µ –ø—Ä–æ–±–ª–µ–º–∞
            uk_good = key not in uk_text
            en_good = key not in en_text

            results[key] = {
                "uk": uk_text,
                "en": en_text,
                "uk_ok": uk_good,
                "en_ok": en_good
            }

            print(f"{'‚úÖ' if uk_good and en_good else '‚ùå'} {key}")
            print(f"  UK: {uk_text}")
            print(f"  EN: {en_text}")

        except Exception as e:
            print(f"‚ùå {key}: ERROR - {e}")
            results[key] = {"error": str(e)}

    # –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    good_keys = sum(1 for r in results.values() if isinstance(r, dict) and r.get("uk_ok") and r.get("en_ok"))
    total_keys = len(test_keys)

    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {good_keys}/{total_keys} –∫–ª—é—á—ñ–≤ –ø—Ä–∞—Ü—é—é—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ")

    if good_keys == total_keys:
        print("üéâ –í—Å—ñ –∫–ª—é—á—ñ –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—ó –ø—Ä–∞—Ü—é—é—Ç—å!")
        return True
    else:
        print("‚ö†Ô∏è –Ñ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—î—é")
        return False

if __name__ == "__main__":
    success = test_translation_keys()
    exit(0 if success else 1)