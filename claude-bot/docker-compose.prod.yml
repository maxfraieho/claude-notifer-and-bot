# Production Docker Compose for Claude Telegram Bot
# Optimized for remote server deployment with user: kroschu
# Deploy command: docker-compose -f docker-compose.prod.yml up -d

services:
  claude_bot:
    # Use the official Docker Hub image with kroschu credentials
    image: kroschu/claude-code-telegram:latest
    container_name: claude-code-bot-prod
    restart: unless-stopped
    
    # Environment configuration
    env_file:
      - .env
    
    # Additional environment overrides for production
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - TZ=Europe/Kiev
    
    # Volume mounts for data persistence and Claude CLI integration
    volumes:
      # Application data persistence (SQLite database, logs, cache)
      - ./data:/app/data
      # Target project directory for Claude operations
      - ./target_project:/app/target_project
      # Claude CLI authentication (FIXED: mount as read-write with proper ownership)
      # Copy ~/.claude directory to ./claude_config for container access
      - ./claude_config:/home/claudebot/.claude
      # Optional: Additional workspace if needed
      # - ./workspace:/app/workspace
    
    # Working directory
    working_dir: /app
    
    # Security: Run as non-root user (matches Dockerfile UID/GID)
    # user: "1001:1001"
    
    # Comprehensive health check with detailed validation
    healthcheck:
      test: |
        python -c "
        try:
            import src.main
            from src.config.settings import Settings
            settings = Settings()
            print('✓ Bot configuration valid')
            exit(0)
        except Exception as e:
            print(f'✗ Health check failed: {e}')
            exit(1)
        "
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 45s
    
    # Production logging with rotation
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        labels: "service=claude-bot,environment=production,maintainer=kroschu"
    
    # Resource limits optimized for remote server deployment
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '1.5'
        reservations:
          memory: 768M
          cpus: '0.5'
    
    # Network configuration
    # Uncomment if using webhook mode instead of polling
    # ports:
    #   - "8443:8443"
    
    # Container labels for management and monitoring
    labels:
      - "com.docker.compose.service=claude-bot"
      - "environment=production"
      - "maintainer=kroschu"
      - "version=0.1.1"
      - "app=claude-code-telegram"
      # Disable Traefik if using reverse proxy
      - "traefik.enable=false"

# Named volumes for explicit data management
volumes:
  data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  claude_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./claude_config

# Network configuration (bridge network for isolation)
networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16