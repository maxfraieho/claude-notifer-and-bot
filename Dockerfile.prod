# Production-ready multi-stage Dockerfile for Claude Telegram Bot
# Base: python:3.11-slim
# Features: Poetry, Claude CLI, non-root user, optimized layers

FROM python:3.11-slim AS dependencies

# Install system dependencies and Node.js for Claude CLI
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    git \
    gcc \
    g++ \
    ca-certificates \
    gnupg \
    && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
    && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list \
    && apt-get update \
    && apt-get install -y --no-install-recommends nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* /var/tmp/*

# Install Poetry
RUN pip install --no-cache-dir poetry==1.8.4

# Install Claude CLI globally
RUN npm install -g @anthropic-ai/claude-code

FROM python:3.11-slim AS runtime

# Copy system dependencies from dependencies stage
COPY --from=dependencies /usr/local/bin/poetry /usr/local/bin/poetry
COPY --from=dependencies /usr/local/lib/node_modules /usr/local/lib/node_modules
COPY --from=dependencies /usr/bin/node /usr/bin/node
COPY --from=dependencies /usr/bin/npm /usr/bin/npm

# Install minimal runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* /var/tmp/*

# Create non-root user with specific UID/GID for consistency
RUN groupadd -g 1001 claudebot \
    && useradd -m -u 1001 -g 1001 -s /bin/bash claudebot

# Create application directories
RUN mkdir -p /app/data /app/target_project \
    && chown -R claudebot:claudebot /app

# Set environment variables
ENV HOME=/home/claudebot
ENV PATH="/home/claudebot/.local/bin:$PATH"
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Switch to non-root user
USER claudebot
WORKDIR /app

# Copy dependency files
COPY --chown=claudebot:claudebot pyproject.toml poetry.lock ./

# Configure Poetry and install dependencies
RUN poetry config virtualenvs.create false \
    && poetry config virtualenvs.in-project false \
    && poetry install --only=main --no-root --no-cache

# Copy application source code
COPY --chown=claudebot:claudebot src/ ./src/
COPY --chown=claudebot:claudebot CLAUDE.md ./

# Install the application
RUN poetry install --only-root --no-cache

# Health check
HEALTHCHECK --interval=60s --timeout=10s --start-period=30s --retries=3 \
    CMD python -c "import sys; __import__('src.main'); sys.exit(0)" || exit 1

# Expose any required ports (if needed for webhooks)
# EXPOSE 8443

# Run as non-root
ENTRYPOINT ["python", "-m", "src.main"]